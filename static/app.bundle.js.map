{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueAdd.jsx","webpack:///./src/IssueFilter.jsx"],"names":["contentNode","document","getElementById","render","module","hot","accept","IssueRow","props","issue","_id","status","owner","created","toDateString","effort","completionDate","title","propTypes","PropTypes","object","isRequired","IssueTable","issueRows","issues","map","array","IssueList","state","createIssue","bind","loadData","fetch","then","response","ok","json","data","records","forEach","Date","setState","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","newIssues","concat","Component","IssueAdd","handleSubmit","e","preventDefault","form","forms","issueAdd","value","func","IssueFilter"],"mappings":"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","file":"app.bundle.js","sourcesContent":["\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport IssueList from './IssueList.jsx';\r\n\r\nconst contentNode = document.getElementById('contents');\r\n\r\nReactDOM.render(<IssueList />, contentNode);    // Render the component inside the content Node\r\n\r\nif(module.hot) {\r\n    module.hot.accept();\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/App.jsx\n **/","import React from 'react';\r\nimport 'whatwg-fetch';\r\n\r\nimport IssueAdd from './IssueAdd.jsx';\r\nimport IssueFilter from './IssueFilter.jsx';\r\n\r\nconst IssueRow = (props) => (\r\n  <tr>\r\n    <td>{props.issue._id}</td>\r\n    <td>{props.issue.status}</td>\r\n    <td>{props.issue.owner}</td>\r\n    <td>{props.issue.created.toDateString()}</td>\r\n    <td>{props.issue.effort}</td>\r\n    <td>{props.issue.completionDate ? props.issue.completionDate.toDateString() : ''}</td>\r\n    <td>{props.issue.title}</td>\r\n  </tr>\r\n);\r\n\r\nIssueRow.propTypes = {\r\n  issue: React.PropTypes.object.isRequired,\r\n};\r\n\r\nfunction IssueTable(props) {\r\n  const issueRows = props.issues.map(issue => <IssueRow key={issue._id} issue={issue} />);\r\n  return (\r\n    <table className=\"bordered-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Status</th>\r\n          <th>Owner</th>\r\n          <th>Created</th>\r\n          <th>Effort</th>\r\n          <th>Completion Date</th>\r\n          <th>Title</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{issueRows}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nIssueTable.propTypes = {\r\n  issues: React.PropTypes.array.isRequired,\r\n};\r\n\r\nexport default class IssueList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { issues: [] };\r\n\r\n    this.createIssue = this.createIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    fetch('/api/issues').then(response => {\r\n      if (response.ok) {\r\n        response.json().then(data => {\r\n          data.records.forEach(issue => {\r\n            issue.created = new Date(issue.created);\r\n            if (issue.completionDate) {\r\n              issue.completionDate = new Date(issue.completionDate);\r\n            }\r\n          });\r\n          this.setState({ issues: data.records });\r\n        });\r\n      } else {\r\n        response.json().then(error => {\r\n          alert(`Failed to fetch issues ${error.message}`);\r\n        });\r\n      }\r\n    }).catch(err => {\r\n      alert(`Error in fetching data from server: ${err}`);\r\n    });\r\n  }\r\n\r\n  createIssue(newIssue) {\r\n    fetch('/api/issues', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newIssue),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        response.json().then(updatedIssue => {\r\n          updatedIssue.created = new Date(updatedIssue.created);\r\n          if (updatedIssue.completionDate) {\r\n            updatedIssue.completionDate = new Date(updatedIssue.completionDate);\r\n          }\r\n          const newIssues = this.state.issues.concat(updatedIssue);\r\n          this.setState({ issues: newIssues });\r\n        });\r\n      } else {\r\n        response.json().then(error => {\r\n          alert(`Failed to add issue: ${error.message}`);\r\n        });\r\n      }\r\n    }).catch(err => {\r\n      alert(`Error in sending data to server: ${err.message}`);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Issue Tracker</h1>\r\n        <IssueFilter />\r\n        <hr />\r\n        <IssueTable issues={this.state.issues} />\r\n        <hr />\r\n        <IssueAdd createIssue={this.createIssue} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/IssueList.jsx\n **/","import React from 'react';\r\n\r\nexport default class IssueAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const form = document.forms.issueAdd;\r\n    this.props.createIssue({\r\n      owner: form.owner.value,\r\n      title: form.title.value,\r\n      status: 'New',\r\n      created: new Date(),\r\n    });\r\n    // clear the form for the next input\r\n    form.owner.value = ''; form.title.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form name=\"issueAdd\" onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" name=\"owner\" placeholder=\"Owner\" />\r\n          <input type=\"text\" name=\"title\" placeholder=\"Title\" />\r\n          <button>Add</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIssueAdd.propTypes = {\r\n  createIssue: React.PropTypes.func.isRequired,\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/IssueAdd.jsx\n **/","import React from 'react';\r\n\r\nexport default class IssueFilter extends React.Component { // eslint-disable-line\r\n  render() {\r\n    return (\r\n      <div>This is a placeholder for the Issue Filter.</div>\r\n      );\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/IssueFilter.jsx\n **/"],"sourceRoot":""}