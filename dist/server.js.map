{"version":3,"sources":["../server/server.js"],"names":["SourceMapSupport","install","app","use","express","static","bodyParser","json","db","get","req","res","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","collection","find","toArray","then","issues","metadata","total_count","length","_metadata","records","catch","error","console","log","message","post","newIssue","body","created","Date","err","Issue","validateIssue","insertOne","result","_id","insertedId","limit","next","savedIssue","issueId","ObjectId","params","id","issue","put","updateOne","convertIssue","delete","deleteOne","deleteResult","n","sendFile","path","resolve","MongoClient","connect","connection","listen"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport Issue from './issue.js';\r\nimport 'babel-polyfill';\r\nimport path from 'path';\r\nimport SourceMapSupport from 'source-map-support';\r\n\r\nSourceMapSupport.install();\r\n\r\nconst app = express();\r\napp.use(express.static('static'));\r\napp.use(bodyParser.json());\r\n\r\nlet db;\r\n\r\napp.get('/api/issues', (req, res) => {\r\n  const filter = {};\r\n  if (req.query.status) filter.status = req.query.status;\r\n  if (req.query.effort_lte || req.query.effort_gte) filter.effort = {};\r\n  if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\r\n  if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\r\n  db.collection('issues').find(filter).toArray().\r\n  then(issues => {\r\n    const metadata = { total_count: issues.length };\r\n    res.json({ _metadata: metadata, records: issues });\r\n  }).\r\n  catch(error => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n  });\r\n});\r\n\r\n\r\napp.post('/api/issues', (req, res) => {\r\n  const newIssue = req.body;\r\n  newIssue.created = new Date();\r\n  if (!newIssue.status) {\r\n    newIssue.status = 'New';\r\n  }\r\n  const err = Issue.validateIssue(newIssue);\r\n  if (err) {\r\n    res.status(422).json({ message: `Invalid request: ${err}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').insertOne(newIssue).then(result =>\r\n    db.collection('issues').find({ _id: result.insertedId }).limit(1).\r\n    next()\r\n  ).\r\n  then(savedIssue => {\r\n    res.json(savedIssue);\r\n  }).\r\n  catch(error => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n  });\r\n});\r\n\r\napp.get('/api/issues/:id', (req, res) => {\r\n  let issueId;\r\n  try {\r\n    issueId = new ObjectId(req.params.id);\r\n  } catch (error) {\r\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').find({ _id: issueId }).limit(1)\r\n  .next()\r\n  .then(issue => {\r\n    if (!issue) res.status(404).json({ message: `No such issue: ${issueId}` });\r\n    else res.json(issue);\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n  });\r\n});\r\n\r\napp.put('/api/issues/:id', (req, res) => {\r\n  let issueId;\r\n  try {\r\n    issueId = new ObjectId(req.params.id);\r\n  } catch (error) {\r\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n    return;\r\n  }\r\n\r\n  const issue = req.body;\r\n  delete issue._id;\r\n\r\n  const err = Issue.validateIssue(issue);\r\n  if (err) {\r\n    res.status(422).json({ message: `Invalid request: ${err}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').updateOne({ _id: issueId }, Issue.convertIssue(issue)).then(() =>\r\n    db.collection('issues').find({ _id: issueId }).limit(1)\r\n    .next()\r\n  )\r\n  .then(savedIssue => {\r\n    res.json(savedIssue);\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n  });\r\n});\r\n\r\napp.delete('/api/issues/:id', (req, res) => {\r\n  let issueId;\r\n  try {\r\n    issueId = new ObjectId(req.params.id);\r\n  } catch (error) {\r\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').deleteOne({ _id: issueId }).then((deleteResult) => {\r\n    if (deleteResult.result.n === 1) res.json({ status: 'OK' });\r\n    else res.json({ status: 'Warning: object not found' });\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n  });\r\n});\r\n\r\napp.get('*', (req, res) => {\r\n  res.sendFile(path.resolve('static/index.html'));\r\n});\r\n\r\nMongoClient.connect('mongodb://localhost/issuetracker').then(connection => {\r\n  db = connection;\r\n  app.listen(3000, () => {\r\n    console.log('App started on port 3000');\r\n  });\r\n}).catch(error => {\r\n  console.log('ERROR:', error);\r\n});\r\n"]}